name: Chocolatine Workflow

env:
  MIRROR_URL: ${{ secrets.MIRROR_URL }}
  EXECUTABLES: ${{ secrets.EXECUTABLES }}

on:
  push:
    branches-ignore:
      - 'ga-ignore-**'
  pull_request:
    branches-ignore:
      - 'ga-ignore-**'

jobs:
  check_repository:
    runs-on: ubuntu-latest
    outputs:
      is_mirror: ${{ steps.check_mirror.outputs.is_mirror }}
    steps:
      - name: Check if we're in the mirror repository
        id: check_mirror
        run: |
          if [ "$GITHUB_REPOSITORY" == "EpitechPGEPromo2029/B-DOP-200-BAR-2-1-chocolatine-itziar.diaz-herranz" ]; then
            echo "is_mirror=true" >> $GITHUB_OUTPUT
          else
            echo "is_mirror=false" >> $GITHUB_OUTPUT
          fi

  check_coding_style:
    needs: check_repository
    if: needs.check_repository.outputs.is_mirror != 'true'
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run coding style checker
        run: check.sh $(pwd) $(pwd)
        
      - name: Display coding style errors
        if: always()
        run: |
          if [ -f coding-style-reports.log ]; then
            while IFS= read -r line; do
              file_path=$(echo "$line" | cut -d: -f1)
              line_number=$(echo "$line" | cut -d: -f2)
              error_type=$(echo "$line" | cut -d: -f3)
              error_message=$(echo "$line" | cut -d: -f4)
              
              echo "::error file=$file_path,line=$line_number::$error_type: $error_message"
            done < coding-style-reports.log
            
            error_count=$(wc -l < coding-style-reports.log)
            if [ "$error_count" -gt 0 ]; then
              echo "Found $error_count coding style errors!"
              exit 1
            fi
          else
            echo "No coding style errors found."
          fi

  check_program_compilation:
    needs: check_coding_style
    if: needs.check_repository.outputs.is_mirror != 'true'
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Compile the project
        timeout-minutes: 2
        run: make

      - name: Clean the project
        run: make clean

      - name: Check executables
        run: |
          for exec_path in $(echo $EXECUTABLES | tr ',' ' '); do
            if [ ! -f "$exec_path" ]; then
              echo "::error file=$exec_path::Executable file not found: $exec_path"
              exit 1
            fi
            
            if [ ! -x "$exec_path" ]; then
              echo "::error file=$exec_path::File exists but is not executable: $exec_path"
              exit 1
            fi
            
            echo "Executable $exec_path found and is executable"
          done

  run_tests:
    needs: check_program_compilation
    if: needs.check_repository.outputs.is_mirror != 'true'
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run tests
        timeout-minutes: 2
        run: make tests_run

  push_to_mirror:
    needs: run_tests
    if: github.event_name == 'push' && needs.check_repository.outputs.is_mirror != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GIT_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
      - name: Try push to mirror
        id: push_attempt
        continue-on-error: true
        run: |
          git remote add mirror git@github.com:EpitechPGEPromo2029/B-DOP-200-BAR-2-1-chocolatine-itziar.diaz-herranz.git
          git push --force mirror HEAD:refs/heads/${{ github.ref_name }}
          
      - name: Check push result
        run: |
          if [ "${{ steps.push_attempt.outcome }}" == "failure" ]; then
            echo "Push to mirror failed, but this is expected in this educational context."
            echo "In a real-world scenario, you would need write access to the repository."
            echo "Please consult your teacher for the correct way to submit your work."
            # We don't fail the workflow since this might be intentional in the educational context
          else
            echo "Successfully pushed to mirror repository!"
          fi
